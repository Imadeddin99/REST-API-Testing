<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TestSuite" time="9.066" tests="18" errors="0" skipped="0" failures="5">
  <properties>
    <property name="idea.version" value="2020.3.1"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="java.vm.version" value="15.0.1+9-18"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-15.0.1\bin"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Users\Imadeddin Salama\IdeaProjects\RESTAPITesting"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=";"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Users\Imadeddin Salama\IdeaProjects\RESTAPITesting"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="15.0.1+9-18"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\IMADED~1\AppData\Local\Temp\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="maven.ext.class.path" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\maven\lib\maven-event-listener.jar"/>
    <property name="classworlds.conf" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\maven\lib\maven3\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-15.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Users\Imadeddin Salama\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\PyCharm Community Edition 2019.1.3\bin;;C:\Program Files\JetBrains\WebStorm 2018.3.5\bin;;C:\Users\Imadeddin Salama\AppData\Roaming\npm;C:\Users\Imadeddin Salama\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\bin;;C:\apache-maven-3.6.3\bin;;."/>
    <property name="maven.conf" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\maven\lib\maven3/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="59.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="user.home" value="C:\Users\Imadeddin Salama"/>
    <property name="user.timezone" value="Asia/Jerusalem"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="15"/>
    <property name="user.name" value="Imadeddin Salama"/>
    <property name="java.class.path" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\maven\lib\maven3\boot\plexus-classworlds-2.6.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\maven\lib\maven3\boot\plexus-classworlds.license"/>
    <property name="java.vm.specification.version" value="15"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.classworlds.Launcher -Didea.version=2020.3.1"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-15.0.1"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="15.0.1"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.1\plugins\maven\lib\maven3"/>
    <property name="file.separator" value="\"/>
    <property name="java.version.date" value="2020-10-20"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase name="TestGETWithNumbersOutrangeOfSalariesAbove" classname="TestClasses.GETTest" time="0.209"/>
  <testcase name="TestGETWithNumbersOutrangeOfSalariesAbove" classname="TestClasses.GETTest" time="0.178"/>
  <testcase name="TestGETWithNumbersOutrangeOfSalariesAbove" classname="TestClasses.GETTest" time="0.186"/>
  <testcase name="getTest" classname="TestClasses.GETTest" time="0.428"/>
  <testcase name="deleteTest" classname="TestClasses.DeleteTest" time="0.823"/>
  <testcase name="deleteTest" classname="TestClasses.DeleteTest" time="0.778"/>
  <testcase name="deleteTest" classname="TestClasses.DeleteTest" time="0.688"/>
  <testcase name="deleteTest" classname="TestClasses.DeleteTest" time="0.846"/>
  <testcase name="postTest" classname="TestClasses.POSTTest" time="0.375"/>
  <testcase name="postTest" classname="TestClasses.POSTTest" time="0.465"/>
  <testcase name="postTest" classname="TestClasses.POSTTest" time="0.391"/>
  <testcase name="postTest" classname="TestClasses.POSTTest" time="0.234">
    <failure message="expected:&lt;ERROR&gt; but was:&lt;SUCCESS&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<ERROR> but was:<SUCCESS>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:171)
	at org.testng.Assert.assertEquals(Assert.java:181)
	at TestClasses.POSTTest.postTest(POSTTest.java:32)
]]></failure>
    <system-out>{"status" : "SUCCESS", "message" : "All employees are deleted successfully."}
{"status" : "SUCCESS", "message" : "New employee is added successfully."}
{"status" : "SUCCESS", "message" : "New employee is added successfully."}
</system-out>
  </testcase>
  <testcase name="postTest" classname="TestClasses.POSTTest" time="0.187">
    <failure message="expected:&lt;ERROR&gt; but was:&lt;SUCCESS&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<ERROR> but was:<SUCCESS>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:171)
	at org.testng.Assert.assertEquals(Assert.java:181)
	at TestClasses.POSTTest.postTest(POSTTest.java:32)
]]></failure>
    <system-out>{"status" : "SUCCESS", "message" : "All employees are deleted successfully."}
{"status" : "SUCCESS", "message" : "New employee is added successfully."}
{"status" : "SUCCESS", "message" : "New employee is added successfully."}
</system-out>
  </testcase>
  <testcase name="postTest" classname="TestClasses.POSTTest" time="0.406">
    <failure message="expected:&lt;50000&gt; but was:&lt;10000&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<50000> but was:<10000>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:365)
	at org.testng.Assert.assertEquals(Assert.java:375)
	at TestClasses.POSTTest.postTest(POSTTest.java:36)
]]></failure>
    <system-out>{"status" : "SUCCESS", "message" : "All employees are deleted successfully."}
{"status" : "SUCCESS", "message" : "New employee is added successfully."}
{"status" : "SUCCESS", "message" : "New employee is added successfully."}
{  "maxSalary": 10000,  "totalSalaries": 90000,  "employeesCount": 6,  "minSalary": 5000,  "items": [    {      "firstName": "Imad",      "lastName": "Salama",      "id": "1",      "salary": 10000    },    {      "firstName": "John",      "lastName": "Smith",      "id": "2",      "salary": 5000    },    {      "firstName": "Blaise",      "lastName": "Pascal",      "id": "438745745094",      "salary": 10000    },    {      "firstName": "Blaise",      "lastName": "Pascal",      "id": "3",      "salary": 10000    },    {      "firstName": "Test",      "lastName": "Test",      "id": "4",      "salary": 50000    },    {      "firstName": "John",      "lastName": "Smith",      "id": "438768422146",      "salary": 5000    }  ]}
</system-out>
  </testcase>
  <testcase name="postTest" classname="TestClasses.POSTTest" time="0.403"/>
  <testcase name="putTest" classname="TestClasses.PUTTest" time="0.392">
    <failure message="items[firstName=Pascsssal].id&#10;Expected: 438745745094&#10;     got: 438768422146&#10; ; items[firstName=Pascsssal].salary&#10;Expected: 100005&#10;     got: 50002&#10; ; items[firstName=John]&#10;Expected: a JSON object&#10;     but none found&#10; ; items[firstName=Blaise]&#10;Unexpected: a JSON object&#10; ; maxSalary&#10;Expected: 100005&#10;     got: 50002&#10; ; minSalary&#10;Expected: 5000&#10;     got: 10000&#10; ; totalSalaries&#10;Expected: 105005&#10;     got: 60002&#10;" type="java.lang.AssertionError">java.lang.AssertionError: items[firstName=Pascsssal].id
Expected: 438745745094
     got: 438768422146
 ; items[firstName=Pascsssal].salary
Expected: 100005
     got: 50002
 ; items[firstName=John]
Expected: a JSON object
     but none found
 ; items[firstName=Blaise]
Unexpected: a JSON object
 ; maxSalary
Expected: 100005
     got: 50002
 ; minSalary
Expected: 5000
     got: 10000
 ; totalSalaries
Expected: 105005
     got: 60002

	at org.skyscreamer.jsonassert.JSONAssert.assertEquals(JSONAssert.java:417)
	at org.skyscreamer.jsonassert.JSONAssert.assertEquals(JSONAssert.java:394)
	at org.skyscreamer.jsonassert.JSONAssert.assertEquals(JSONAssert.java:336)
	at TestClasses.PUTTest.putTest(PUTTest.java:29)
</failure>
    <system-out>{"status" : "SUCCESS", "message" : "All employees are deleted successfully."}
{"status" : "SUCCESS", "message" : "New employee is added successfully."}
{"status" : "SUCCESS", "message" : "Employee with id 438768422146 is updated successfully."}
{  "maxSalary": 50002,  "totalSalaries": 60002,  "employeesCount": 2,  "minSalary": 10000,  "items": [    {      "firstName": "Blaise",      "lastName": "Pascal",      "id": "438745745094",      "salary": 10000    },    {      "firstName": "Pascsssal",      "lastName": "Blaisssse",      "id": "438768422146",      "salary": 50002    }  ]}
</system-out>
  </testcase>
  <testcase name="putTest" classname="TestClasses.PUTTest" time="0.389">
    <failure message="items[firstName=Test].salary&#10;Expected: 500&#10;     got: 250&#10; ; minSalary&#10;Expected: 500&#10;     got: 250&#10;" type="java.lang.AssertionError">java.lang.AssertionError: items[firstName=Test].salary
Expected: 500
     got: 250
 ; minSalary
Expected: 500
     got: 250

	at org.skyscreamer.jsonassert.JSONAssert.assertEquals(JSONAssert.java:417)
	at org.skyscreamer.jsonassert.JSONAssert.assertEquals(JSONAssert.java:394)
	at org.skyscreamer.jsonassert.JSONAssert.assertEquals(JSONAssert.java:336)
	at TestClasses.PUTTest.putTest(PUTTest.java:29)
</failure>
    <system-out>{"status" : "SUCCESS", "message" : "All employees are deleted successfully."}
{"status" : "SUCCESS", "message" : "New employee is added successfully."}
{"status" : "SUCCESS", "message" : "Employee with id 438768422146 is updated successfully."}
{  "maxSalary": 10000,  "totalSalaries": 10250,  "employeesCount": 2,  "minSalary": 250,  "items": [    {      "firstName": "Blaise",      "lastName": "Pascal",      "id": "438745745094",      "salary": 10000    },    {      "firstName": "Test",      "lastName": "Test",      "id": "438768422146",      "salary": 250    }  ]}
</system-out>
  </testcase>
  <testcase name="putTest" classname="TestClasses.PUTTest" time="1.688"/>
</testsuite>